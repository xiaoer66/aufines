<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aufine.dao.RoleInfoDAO">
  <resultMap id="BaseResultMap" type="com.aufine.entity.RoleInfo">
    <id column="roleID" jdbcType="INTEGER" property="roleid" />
    <result column="roleName" jdbcType="VARCHAR" property="rolename" />
    <result column="roleZHName" jdbcType="VARCHAR" property="rolezhname" />
    <result column="roleDescription" jdbcType="VARCHAR" property="roledescription" />
    <result column="createID" jdbcType="INTEGER" property="createid" />
    <result column="createName" jdbcType="VARCHAR" property="createname" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateID" jdbcType="INTEGER" property="updateid" />
    <result column="updateName" jdbcType="VARCHAR" property="updatename" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="delFlag" jdbcType="SMALLINT" property="delflag" />
  </resultMap>
  <sql id="Base_Column_List">
    roleID, roleName, roleZHName, roleDescription, createID, createName, createTime, 
    updateID, updateName, updateTime, delFlag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role_info
    where roleID = #{roleid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role_info
    where roleID = #{roleid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.aufine.entity.RoleInfo">
    insert into role_info (roleID, roleName, roleZHName, 
      roleDescription, createID, createName, 
      createTime, updateID, updateName, 
      updateTime, delFlag)
    values (#{roleid,jdbcType=INTEGER}, #{rolename,jdbcType=VARCHAR}, #{rolezhname,jdbcType=VARCHAR}, 
      #{roledescription,jdbcType=VARCHAR}, #{createid,jdbcType=INTEGER}, #{createname,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updateid,jdbcType=INTEGER}, #{updatename,jdbcType=VARCHAR}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{delflag,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.aufine.entity.RoleInfo">
    insert into role_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleid != null">
        roleID,
      </if>
      <if test="rolename != null">
        roleName,
      </if>
      <if test="rolezhname != null">
        roleZHName,
      </if>
      <if test="roledescription != null">
        roleDescription,
      </if>
      <if test="createid != null">
        createID,
      </if>
      <if test="createname != null">
        createName,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="updateid != null">
        updateID,
      </if>
      <if test="updatename != null">
        updateName,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
      <if test="delflag != null">
        delFlag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleid != null">
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="rolename != null">
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="rolezhname != null">
        #{rolezhname,jdbcType=VARCHAR},
      </if>
      <if test="roledescription != null">
        #{roledescription,jdbcType=VARCHAR},
      </if>
      <if test="createid != null">
        #{createid,jdbcType=INTEGER},
      </if>
      <if test="createname != null">
        #{createname,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateid != null">
        #{updateid,jdbcType=INTEGER},
      </if>
      <if test="updatename != null">
        #{updatename,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="delflag != null">
        #{delflag,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aufine.entity.RoleInfo">
    update role_info
    <set>
      <if test="rolename != null">
        roleName = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="rolezhname != null">
        roleZHName = #{rolezhname,jdbcType=VARCHAR},
      </if>
      <if test="roledescription != null">
        roleDescription = #{roledescription,jdbcType=VARCHAR},
      </if>
      <if test="createid != null">
        createID = #{createid,jdbcType=INTEGER},
      </if>
      <if test="createname != null">
        createName = #{createname,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateid != null">
        updateID = #{updateid,jdbcType=INTEGER},
      </if>
      <if test="updatename != null">
        updateName = #{updatename,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="delflag != null">
        delFlag = #{delflag,jdbcType=SMALLINT},
      </if>
    </set>
    where roleID = #{roleid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aufine.entity.RoleInfo">
    update role_info
    set roleName = #{rolename,jdbcType=VARCHAR},
      roleZHName = #{rolezhname,jdbcType=VARCHAR},
      roleDescription = #{roledescription,jdbcType=VARCHAR},
      createID = #{createid,jdbcType=INTEGER},
      createName = #{createname,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateID = #{updateid,jdbcType=INTEGER},
      updateName = #{updatename,jdbcType=VARCHAR},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      delFlag = #{delflag,jdbcType=SMALLINT}
    where roleID = #{roleid,jdbcType=INTEGER}
  </update>


  <!--============================================新增查询方法===============================================-->
  <!--
  ${params.xxx}这种写法参数默认是传字符串
  #{params.xxx}可以取Long，Integer之类等
  -->
  <select id="getRoleInfoByUserID" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    SELECT
      u.`userID`,
      u.`userName`,
      r.`roleID`,
      r.`roleName`,
      r.`roleZHName`,
      r.`roleDescription`
    FROM
      `user_info` u
      LEFT JOIN `user_role` ur
        ON u.`userID` = ur.`userID`
      LEFT JOIN `role_info` r
        ON r.`roleID` = ur.`roleID`
    WHERE u.`userID` = ${userID}
      AND u.`delFlag` = 0
  </select>
</mapper>